{"version":3,"sources":["components/contactform/ContactForm.js","components/contact/Contact.js","components/contactlist/ContactList.js","components/filter/Filter.js","App.js","index.js","components/contactform/ContactForm.module.css"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","contacts","find","contact","alert","onSubmit","id","uuidv4","reset","this","className","s","form","input","type","pattern","title","required","onChange","button","React","Component","Contact","deleteContact","map","onClick","ContactList","Filter","filter","changeFilter","App","formSubmitHandler","data","getVisibleContacts","normalizedFilter","toLowerCase","includes","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8TAKMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,EAAKC,SAAL,eAAiBD,EAAEE,cAAcL,KAAOG,EAAEE,cAAcC,S,EAG1DC,aAAe,SAACJ,GACdA,EAAEK,iBAGA,EAAKC,MAAMC,SAASC,MAAK,SAACC,GAAD,OAAaA,EAAQZ,OAAS,EAAKD,MAAMC,QAElEa,MAAM,GAAD,OAAI,EAAKd,MAAMC,KAAf,6BAEL,EAAKS,MAAMK,SAAS,CAClBC,GAAIC,cACJhB,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,SAErB,EAAKgB,U,EAITA,MAAQ,WACN,EAAKb,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBiB,KAAKnB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMkB,UAAWC,IAAEC,KAAMP,SAAUI,KAAKX,aAAxC,UACE,yCAEE,uBACEY,UAAWC,IAAEE,MACbC,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRpB,MAAON,EACP2B,SAAUT,KAAKhB,kBAGnB,2CAEE,uBACEiB,UAAWC,IAAEE,MACbC,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRpB,MAAOL,EACP0B,SAAUT,KAAKhB,kBAGnB,wBAAQiB,UAAWC,IAAEQ,OAAQL,KAAK,SAAlC,gC,GA7DkBM,IAAMC,WCH1BC,EAAU,SAAC,GAAD,IAAGrB,EAAH,EAAGA,SAAUsB,EAAb,EAAaA,cAAb,OACd,mCACGtB,EAASuB,KAAI,SAACrB,GAAD,OACZ,+BACGA,EAAQZ,KADX,IACkBY,EAAQX,OACxB,wBAAQsB,KAAK,SAASW,QAAS,kBAAMF,EAAcpB,EAAQG,KAA3D,sBAFOH,EAAQG,UCFjBoB,EAAc,SAAC,GAAD,IAAGzB,EAAH,EAAGA,SAAUsB,EAAb,EAAaA,cAAb,OAClB,6BACE,cAAC,EAAD,CAAStB,SAAUA,EAAUsB,cAAeA,OCH1CI,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAX,OACb,0DAEE,uBACEf,KAAK,OACLvB,KAAK,SACLwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRpB,MAAO+B,EACPV,SAAUW,QCJVC,E,4MACJxC,MAAQ,CACNW,SAAU,GACV2B,OAAQ,I,EAGVC,aAAe,SAACnC,GACd,EAAKC,SAAL,eAAiBD,EAAEE,cAAcL,KAAOG,EAAEE,cAAcC,S,EAG1DkC,kBAAoB,SAACC,GACnB,EAAKrC,SAAS,CAAEM,SAAS,GAAD,mBAAM,EAAKX,MAAMW,UAAjB,CAA2B+B,O,EAGrDC,mBAAqB,WACnB,MAA6B,EAAK3C,MAA1BW,EAAR,EAAQA,SACFiC,EADN,EAAkBN,OACcO,cAEhC,OAAOlC,EAAS2B,QAAO,SAACzB,GAAD,OACrBA,EAAQZ,KAAK4C,cAAcC,SAASF,O,EAIxCX,cAAgB,SAACc,GACf,EAAK1C,UAAS,SAAC2C,GAAD,MAAgB,CAC5BrC,SAAUqC,EAAUrC,SAAS2B,QAC3B,SAACzB,GAAD,OAAaA,EAAQG,KAAO+B,U,4CAKlC,WACE,MAA6B5B,KAAKnB,MAA1BW,EAAR,EAAQA,SAAU2B,EAAlB,EAAkBA,OAElB,OACE,qCACE,2CACA,cAAC,EAAD,CAAa3B,SAAUA,EAAUI,SAAUI,KAAKsB,oBAChD,0CACA,cAAC,EAAD,CAAQH,OAAQA,EAAQC,aAAcpB,KAAKoB,eAC3C,cAAC,EAAD,CACE5B,SAAUQ,KAAKwB,qBACfV,cAAed,KAAKc,uB,GA1CZH,IAAMC,WCHxBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.deeb861e.chunk.js","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      this.props.contacts.find((contact) => contact.name === this.state.name)\n    ) {\n      alert(`${this.state.name} is already in contacts`);\n    } else {\n      this.props.onSubmit({\n        id: uuidv4(),\n        name: this.state.name,\n        number: this.state.number,\n      });\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n};\n\nexport { ContactForm };\n","import PropTypes from \"prop-types\";\n\nconst Contact = ({ contacts, deleteContact }) => (\n  <>\n    {contacts.map((contact) => (\n      <li key={contact.id}>\n        {contact.name}:{contact.number}\n        <button type=\"button\" onClick={() => deleteContact(contact.id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </>\n);\n\nContact.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport { Contact };\n","import { Contact } from \"../contact\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <ul>\n    <Contact contacts={contacts} deleteContact={deleteContact} />\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n};\n\nexport { ContactList };\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, changeFilter }) => (\n  <label>\n    Find contacts by name\n    <input\n      type=\"text\"\n      name=\"filter\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      value={filter}\n      onChange={changeFilter}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n\nexport { Filter };\n","import React from \"react\";\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\n\nimport { ContactForm } from \"./components/contactform\";\nimport { ContactList } from \"./components/contactlist\";\nimport { Filter } from \"./components/filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  changeFilter = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  formSubmitHandler = (data) => {\n    this.setState({ contacts: [...this.state.contacts, data] });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} changeFilter={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  filter: PropTypes.string,\n};\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__15_C6\",\"input\":\"ContactForm_input__5U5De\",\"button\":\"ContactForm_button__2bcWB\"};"],"sourceRoot":""}